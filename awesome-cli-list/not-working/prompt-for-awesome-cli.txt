Ultimate Goal, to build a TUI Application for easily accessing the github awesome list.

What options we need Search for filtering which has fuzzy find

Listing a 3 column layout to display Titles with Links, Sub Titles with Sub Links, And further.
3 Column layout with 1 Row for on the top for search and 1 row at the bottom for showing all the options of how to use the app.

README_URL = "https://raw.githubusercontent.com/sindresorhus/awesome/master/readme.md"
BASE_URL = "https://github.com/sindresorhus/awesome"
CACHE_FILE = Path("awesome.md") (in fact this can be python data structure too if it can be used)
https://github.com/umutphp/awesome-cli/blob/master/assets/images/awesome-cli.gif

Hot Keys
Esc to quit the application with asking confirmation to the user Y/N
Backspace to come back from column 3 to column 2 to column 1
Up and Down Arrow Key for Scrolling through the list of links
Enter or Right Arrow key to go to that specific URL using the OS Default Browser
Tab hot key to go to the sub links
If sub links don't exists then it should show user a message saying that there are no sub links do you want to open the link you just clicked
Python python-markdown2 and for TUI Textual and from prompt_toolkit.completion import FuzzyWordCompleter


We should be using Rust or Go or Python
If it is Rust we should use comrak for parsing Markdown Data and Rataui for the TUI
If it is in Go lang goldmark for parsing Markdown Data and bubbletea and related components for the TUI
If it is in Python python-markdown2 and for TUI Textual

Shall we get started first let me know what Language you think would be appropriate for this project.



Please provide me full code end to end, I want to create a good interactive TUI with proper error handling and using rust data structure Title, links and Sub Title and sub links, and using markdow parser to parse data from GHB Read me file, the UI should be having a 2 rows, the top row will be used for searching / filtering from the list of items show Titles,the 2ndrow will be split into 2 columns and 1st column will be split into a 2 2 rows with 90% of the space being used by the Titles being displayed from parsed MD file, and the 2nd row will have an help section to give users the hot keys that can be used, the 1row 1st column will display links and the user can use the search above to filter it or click a tab on it to see the Titles linked to the Sub Titles linked to sub links on the 2nd column if it exists if it does not exist then it can say there are no sub links and should ask the user if they want to go to the Main link they have choosen, The hot keys that will be used by users are Esc to quit the application (it should neatly show a confirmation at the help section if they want to quit y / n if they type y it should exit gracefully thanking the user for using the app, if they hit n, it should continue in the app, the other keys are Right / Enter key to go to open the links in browser (in the default browser for that OS (should work on MacOS / Linux / Windows) Up and Down to browse through the links, and ? to display all the below hot keys as help section at the bottom, Let me know if you need any other info, I am attaching a GIF which will give you a clue of what we are trying to replicate but ours will be more user friendly...# Constants for URLs and cache file path there are links which we will be using...
README_URL = "https://raw.githubusercontent.com/sindresorhus/awesome/master/readme.md"
BASE_URL = "https://github.com/sindresorhus/awesome"
CACHE_FILE = Path("awesome.md") (in fact this can be python data structure too if it can be used) https://github.com/umutphp/awesome-cli/blob/master/assets/images/awesome-cli.gif
